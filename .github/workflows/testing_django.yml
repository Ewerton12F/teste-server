name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: üîß Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: üì¶ Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: üõ£Ô∏è Display the path
      env: |
        ENGINE: ${{ secrets.ENGINE }}
        NAME: ${{ secrets.NAME }}
        USER: ${{ secrets.USER }}
        PASSWORD: ${{ secrets.PASSWORD }}
        HOST: ${{ secrets.HOST }}
        PORT: ${{ secrets.PORT }}
      run: |
        import os
        print(os.environ['ENGINE'])
        print(os.environ['NAME'])
        print(os.environ['USER'])
        print(os.environ['PASSWORD'])
        print(os.environ['HOST'])
        print(os.environ['PORT'])
    - name: ‚úèÔ∏è Lint with flake8
      run: |
        pip install flake8
        flake8
    - name: ‚¨õ Lint with black
      run: |
        pip install black
        black .
    - name: üìÉ Lint with isort
      run: |
        pip install isort
        isort .
    - name: üîç Coverage report
      env: |
        ENGINE: ${{ secrets.ENGINE }}
        NAME: ${{ secrets.NAME }}
        USER: ${{ secrets.USER }}
        PASSWORD: ${{ secrets.PASSWORD }}
        HOST: ${{ secrets.HOST }}
        PORT: ${{ secrets.PORT }}
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
    - name: üêç Django Tests
      run: |
        python3 manage.py test
